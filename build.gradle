plugins {
    id 'java'
    id 'java-library'
    id 'application'
    id 'maven-publish'
    id 'com.palantir.docker' version '0.25.0'
}

ext {
    sharedDir           = file("${project.rootDir}/shared")
    sailfishVersion     = '3.2.1572'
}

group = 'com.exactpro.th2'
version = release_version
sourceCompatibility = 11
targetCompatibility = 11

repositories {
    maven {
        name 'MavenLocal'
        url sharedDir
    }
    mavenCentral()
    maven {
        name 'Sonatype_snapshots'
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
        name 'Sonatype_releases'
        url 'https://s01.oss.sonatype.org/content/repositories/releases/'
    }
    mavenLocal()
    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}
jar {
    manifest {
        attributes(
                'Created-By':               "${System.getProperty('java.version')} (${System.getProperty('java.or')})",
                'Specification-Title':      '',
                'Specification-Vendor':     'Exactpro Systems LLC',
                'Implementation-Title':     project.archivesBaseName,
                'Implementation-Vendor':    'Exactpro Systems LLC',
                'Implementation-Vendor-Id': 'com.exactpro',
                'Implementation-Version':   project.version
        )
    }
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = 'localRepo'
            url = sharedDir
        }
    }
}

dependencies {
    api platform('com.exactpro.th2:bom:3.0.0')

    implementation "com.exactpro.th2:common:2.17.2"
    implementation "com.exactpro.th2:sailfish-utils:2.4.2"
    implementation "com.exactpro.th2:grpc-util:2.4.2"

    implementation "com.exactpro.sf:sailfish-core:${sailfishVersion}"

    implementation "org.slf4j:slf4j-log4j12"
    implementation "org.slf4j:slf4j-api"

    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
}

test {
    useJUnitPlatform()
}

application {
    mainClassName 'com.exactpro.th2.util.MicroserviceMain'
}

applicationName = 'service'

distTar {
    archiveName "${applicationName}.tar"
}

dockerPrepare {
    dependsOn distTar
}

docker {
    copySpec.from(tarTree("$buildDir/distributions/${applicationName}.tar"))
}